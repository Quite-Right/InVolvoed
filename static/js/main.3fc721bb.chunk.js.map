{"version":3,"sources":["redux/actions/scene-actions.js","redux/selectors/scene-selectors.js","redux/selectors/car-selectors.js","redux/selectors/configurator-selectors.js","redux/selectors/language-selectors.js","redux/actions/car-lock-actions.js","redux/actions/car-climatization-actions.js","redux/actions/car-engine-actions.js","redux/actions/car-honk-actions.js","redux/actions/car-flash-actions.js","redux/actions/car-honk-and-flash-actions.js","redux/actions/language-actions.js","constants/commands.js","constants/gestures.js","constants/color.js","redux/reducers/scene-reducer.js","constants/scene.js","redux/reducers/car-lock-reducer.js","redux/reducers/car-climatization-reducer.js","redux/reducers/car-engine-reducer.js","redux/reducers/car-honk-reducer.js","redux/reducers/car-flash-reducer.js","redux/reducers/car-honk-and-flash-reducer.js","redux/reducers/car-reducer.js","redux/actions/configurator-actions.js","redux/reducers/configurator-reducer.js","redux/reducers/language-reducer.js","redux/reducers/root-reducer.js","redux/store.js","components/loader/loader.jsx","utils/createCSSColorFromProportion.js","utils/AnimationActionCreator.js","utils/define-animtaion-action-order.js","utils/getDictionaryValue.js","utils/define-animation-action-label.js","components/model/model.jsx","components/scene-controls/scene-controls.js","components/scene/scene.jsx","components/voice-recognition/voice-recognition.jsx","constants/predictions.js","utils/defineDayTime.js","gestureDescriptions/raisedHand.js","gestureDescriptions/swipeCenterPosition.js","gestureDescriptions/swipeRightPosition.js","gestureDescriptions/swipeLeftPosition.js","components/gesture-recognition/gesture-recognition.jsx","components/lock/lock.js","components/change-color-button/change-color-button.js","components/climatization/climatization.js","components/engine/engine.js","components/honk/honk.js","components/flash/flash.js","components/button/button.jsx","components/configurator/configurator.js","components/language-button/language-button.jsx","components/info/info.jsx","components/button-group/button-group.js","App.js","serviceWorker.js","index.js"],"names":["ROTATE_RIGHT","ROTATION_STOP","ROTATE_LEFT","CHANGE_CAR_COLOR","rotateRight","type","rotateLeft","rotationStop","rotationSelector","store","scene","rotation","carColorSelector","color","lockSelector","car","lock","climatizationSelector","climatization","engineSelector","engine","honkSelector","honk","flashSelector","flash","configuratorActionsSelector","configurator","actionsState","lanuageCodeSelector","language","code","LOCK_CAR","UNLOCK_CAR","LOCK_CAR_START","LOCK_CAR_COMPLETE","LOCK_CAR_ERROR","UNSET_LOCK_CAR_ERROR","lockCarCompleteActionCreator","lockCarErrorActionCreator","error","payload","unlockCar","onSuccess","onError","dispatch","a","Promise","resolve","reject","setTimeout","lockCar","toggleCarLock","getStore","isLocked","CLIMATIZATION_ON","CLIMATIZATION_OFF","CLIMATIZATION_TOGGLE_START","CLIMATIZATION_TOGGLE_COMPLETE","CLIMATIZATION_ERROR","UNSET_CLIMATIZATION_ERROR","climatizationToggleCompleteActionCreator","climatizationErrorActionCreator","climatizationOff","climatizationOn","ENGINE_ON","ENGINE_OFF","ENGINE_TOGGLE_START","ENGINE_TOGGLE_COMPLETE","ENGINE_ERROR","UNSET_ENGINE_ERROR","engineToggleCompleteActionCreator","engineErrorActionCreator","engineOff","engineOn","HONK_TOGGLE_START","HONK_TOGGLE_COMPLETE","HONK_ERROR","UNSET_HONK_ERROR","honkToggleCompleteActionCreator","honkErrorActionCreator","FLASH_TOGGLE_START","FLASH_TOGGLE_COMPLETE","FLASH_ERROR","UNSET_FLASH_ERROR","HONK_AND_FLASH_TOGGLE_START","HONK_AND_FLASH_TOGGLE_COMPLETE","HONK_AND_FLASH_ERROR","UNSET_HONK_AND_FLASH_ERROR","SET_LANGUAGE_CODE","startCommand","stopCommand","startRecognitionCommand","stopRecognitionCommand","openCommand","closeCommand","raisedHand","swipeCenterPosition","swipeRightPosition","swipeLeftPosition","disabledGrey","initialState","b","g","r","selectorsReducer","state","action","inProcess","isTurnedOn","carReducer","combineReducers","honkAndFlash","SAVE_CONFIGURATOR_ACTIONS_STATE","saveConfiguratorActionsState","newState","configuratorReducer","rootReducer","sceneReducer","createStore","applyMiddleware","thunk","Loader","progress","useProgress","Html","center","createCSSColorFromProportion","multiplier","Math","max","AnimationActionCreator","this","repetitions","bind","defineAnimationActionOrder","name","isWheel","includes","isWindow","isTrunk","order","dictionary","FrontLeftWindow","EN","RU","FrontRightWindow","BackLeftWindow","BackRightWindow","FrontLeftDoor","FrontRightDoor","BackLeftDoor","BackRightDoor","FrontLeftWheelTire","FrontRightWheelTire","BackLeftWheelTire","BackRightWheelTire","Trunk","SaveButton","Title","alerts","CloseSuccess","OpenSuccess","ClimatizationOnSuccess","ClimatizationOffSuccess","StartSuccess","StopSuccess","HonkSuccess","FlashSuccess","StandardFailure","voice","reactions","start","stop","open","close","hola","chao","noMatch","getDictionaryValue","path","lang","get","defineAnimationActionLabel","dictionaryRoute","replace","MODEL_URL","Model","group","useRef","gltf","useLoader","GLTFLoader","materials","animations","nodes","useState","undefined","wheelMaterial","glassMaterial","setMaterials","useAnimations","clips","mixer","carActions","setCarActions","wheelMaterialAnimationRedIncrease","setWheelMaterialAnimationRedIncrease","glassMaterialAnimationRedIncrease","setGlassMaterialAnimationRedIncrease","useEffect","console","log","forEach","nodeNameToHide","nodeToHide","visible","newCarActions","GlassMaterial","RedGlassMaterial","clone","WheelMaterial","RedWheelMaterial","newMaterials","clip","index","clipClone","object","children","find","newAction","clipAction","clampWhenFinished","setLoop","THREE","material","play","paused","Object","keys","nodeName","newConfiguratorActionsState","actionName","label","useInterval","scale","ref","useGLTF","preload","SceneControls","useSelector","useDispatch","className","cn","onClick","icon","faChevronLeft","size","faChevronRight","faPause","Scene","carColor","id","fallback","OrbitControls","target","enablePan","autoRotate","autoRotateSpeed","maxDistance","minDistance","maxPolarAngle","PI","minPolarAngle","maxAzimuthAngle","Environment","files","background","VoiceRecognition","recognizer","setRecognizer","micActive","setMicActive","synth","window","speechSynthesis","lockState","SpeechRecognition","webkitSpeechRecognition","interimResults","continuous","timeout","recognizeCommand","event","currentResult","results","resultIndex","result","isFinal","transcript","matches","stringSimilarity","findBestMatch","toLowerCase","bestMatch","rating","resultMatchText","utterance","SpeechSynthesisUtterance","speak","onresult","recognizeHola","clearTimeout","hours","Date","getHours","defineDayTimeAppeal","e","faMicrophoneAlt","faMicrophoneAltSlash","raisedHandGesture","fp","raisedHandName","addCurl","Thumb","NoCurl","addDirection","VerticalUp","DiagonalUpRight","DiagonalUpLeft","Index","Middle","Ring","Pinky","swipeCenterPositionGesture","FullCurl","setWeight","swipeRightPositionGesture","swipeLeftPositionGesture","GestureRecognition","videoActive","setVideoActive","loadedPoses","setLoadedPoses","lastGesture","setLastGesture","webcamRef","loadPoses","handpose","net","detect","current","video","readyState","videoWidth","videoHeight","width","height","estimateHands","hand","length","GE","estimate","landmarks","gesture","gestures","confidence","map","prediction","maxConfidence","indexOf","apply","gestureName","lastGestureName","now","timestamp","toggleVideoActive","createPortal","style","position","marginLeft","marginRight","left","top","textAlign","zindex","document","querySelector","faVideo","faVideoSlash","Lock","alert","useAlert","disabled","success","faLock","faUnlock","ChangeColorButton","isOpened","setIsOpened","backgroundColor","onChangeComplete","newColor","changeCarColor","rgb","disableAlpha","Climatization","climatizationState","toggleCarClimatization","faThermometerFull","faThermometerEmpty","Engine","engineState","toggleCarEngine","faKey","Honk","honkState","audio","useMemo","Audio","faBullhorn","Flash","flashState","faLightbulb","Button","Configurator","configuratorActionsReduxState","configuratorOpened","setConfiguratorOpened","configuratorActionsState","setConfiguratorActionsState","faCogs","faTimes","swapOpacity","sort","key1","key2","key","checked","icons","onChange","configuratorState","LanguageButton","Info","faInfo","styles","body","ButtonGroup","devices","useMediaDevices","hasMic","hasVideo","setDevicesAvailablity","device","kind","options","positions","BOTTOM_CENTER","offset","transition","transitions","SCALE","App","template","AlertTemplate","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3fc721bb.chunk.js","sourcesContent":["export const ROTATE_RIGHT = 'ROTATE_RIGHT';\r\nexport const ROTATION_STOP = 'ROTATION_STOP';\r\nexport const ROTATE_LEFT = 'ROTATE_LEFT';\r\nexport const CHANGE_CAR_COLOR = 'CHANGE_CAR_COLOR';\r\n\r\nexport const rotateRight = () => ({\r\n    type: ROTATE_RIGHT,\r\n})\r\n\r\nexport const rotateLeft = () => ({\r\n    type: ROTATE_LEFT,\r\n})\r\n\r\nexport const rotationStop = () => ({\r\n    type: ROTATION_STOP,\r\n})\r\n\r\nexport const changeCarColor = (color) => ({\r\n    type: CHANGE_CAR_COLOR,\r\n    payload: color,\r\n})","export const rotationSelector = (store) => store.scene.rotation;\r\nexport const carColorSelector = (store) => store.scene.color;","export const lockSelector = (store) => store.car.lock;\r\nexport const climatizationSelector = (store) => store.car.climatization;\r\nexport const engineSelector = (store) => store.car.engine;\r\nexport const honkSelector = (store) => store.car.honk;\r\nexport const flashSelector = (store) => store.car.flash;\r\nexport const honkAndFlashSelector = (store) => store.car.honkAndFlash;","export const configuratorActionsSelector = (store) => store.configurator.actionsState;\r\n","export const lanuageCodeSelector = (store) => store.language.code;\r\n","import {lockSelector} from \"../selectors\";\r\n\r\nexport const LOCK_CAR = 'LOCK_CAR ';\r\nexport const UNLOCK_CAR = ' UNLOCK_CAR';\r\nexport const LOCK_CAR_START = 'LOCK_CAR_START';\r\nexport const LOCK_CAR_COMPLETE = 'LOCK_CAR_COMPLETE';\r\nexport const LOCK_CAR_ERROR = 'LOCK_CAR_ERROR';\r\nexport const UNSET_LOCK_CAR_ERROR ='UNSET_LOCK_CAR_ERROR';\r\n\r\nexport const lockCarActionCreator = () => ({\r\n    type: LOCK_CAR,\r\n});\r\n\r\nexport const unlockCarActionCreator = () => ({\r\n    type: UNLOCK_CAR,\r\n});\r\n\r\nexport const lockCarCompleteActionCreator = () => ({\r\n    type: LOCK_CAR_COMPLETE,\r\n});\r\n\r\nexport const lockCarStartActionCreator = () => ({\r\n    type: LOCK_CAR_START,\r\n})\r\n\r\nexport const lockCarErrorActionCreator = (error) => ({\r\n    type: LOCK_CAR_ERROR,\r\n    payload: error,\r\n})\r\n\r\nexport const unsetLockCarErrorActionCreator = () => ({\r\n    type: UNSET_LOCK_CAR_ERROR,\r\n})\r\n\r\n\r\nexport const unlockCar = (onSuccess, onError) => async (dispatch) => {\r\n    try {\r\n        const asyncData = await new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n        dispatch(unlockCarActionCreator());\r\n        dispatch(lockCarCompleteActionCreator());\r\n        if (onSuccess) {\r\n            onSuccess();\r\n        }\r\n    } catch (error) {\r\n        dispatch(lockCarCompleteActionCreator());\r\n        dispatch(lockCarErrorActionCreator(error));\r\n        if (onError) {\r\n            onError();\r\n        }\r\n    }\r\n}\r\n\r\nexport const lockCar = (onSuccess, onError) => async (dispatch) => {\r\n    try {\r\n        const asyncData = await new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n        dispatch(lockCarActionCreator());\r\n        dispatch(lockCarCompleteActionCreator());\r\n        if (onSuccess) {\r\n            onSuccess();\r\n        }\r\n    } catch (error) {\r\n        dispatch(lockCarCompleteActionCreator());\r\n        dispatch(lockCarErrorActionCreator(error));\r\n        if (onError) {\r\n            onError();\r\n        }\r\n    }\r\n}\r\n\r\nexport const toggleCarLock = (onSuccess, onError) => async (dispatch, getStore) => {\r\n    const store = getStore();\r\n    const {isLocked, error} = lockSelector(store);\r\n\r\n    dispatch(lockCarStartActionCreator());\r\n    if (error) {\r\n        dispatch(unsetLockCarErrorActionCreator());\r\n    }\r\n    if (isLocked) {\r\n        dispatch(unlockCar(onSuccess, onError));\r\n    }\r\n    else {\r\n        dispatch(lockCar(onSuccess, onError));\r\n    }\r\n}","import {climatizationSelector} from \"../selectors\";\r\n\r\nexport const CLIMATIZATION_ON = 'CLIMATIZATION_ON';\r\nexport const CLIMATIZATION_OFF = 'CLIMATIZATION_OFF';\r\nexport const CLIMATIZATION_TOGGLE_START = 'CLIMATIZATION_TOGGLE_START';\r\nexport const CLIMATIZATION_TOGGLE_COMPLETE = 'CLIMATIZATION_TOGGLE_COMPLETE';\r\nexport const CLIMATIZATION_ERROR = 'CLIMATIZATION_ERROR';\r\nexport const UNSET_CLIMATIZATION_ERROR ='UNSET_CLIMATIZATION_ERROR';\r\n\r\nexport const climatizationOnActionCreator = () => ({\r\n    type: CLIMATIZATION_ON,\r\n});\r\n\r\nexport const climatizationOffActionCreator = () => ({\r\n    type: CLIMATIZATION_OFF,\r\n});\r\n\r\nexport const climatizationToggleCompleteActionCreator = () => ({\r\n    type: CLIMATIZATION_TOGGLE_COMPLETE,\r\n});\r\n\r\nexport const climatizationToggleStartActionCreator = () => ({\r\n    type: CLIMATIZATION_TOGGLE_START,\r\n})\r\n\r\nexport const climatizationErrorActionCreator = (error) => ({\r\n    type: CLIMATIZATION_ERROR,\r\n    payload: error,\r\n})\r\n\r\nexport const unsetClimatizationErrorActionCreator = () => ({\r\n    type: UNSET_CLIMATIZATION_ERROR,\r\n})\r\n\r\n\r\nexport const climatizationOff = (onSuccess, onError) => async (dispatch) => {\r\n    try {\r\n        const asyncData = await new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n        dispatch(climatizationOffActionCreator());\r\n        dispatch(climatizationToggleCompleteActionCreator());\r\n        if (onSuccess) {\r\n            onSuccess();\r\n        }\r\n    } catch (error) {\r\n        dispatch(climatizationToggleCompleteActionCreator());\r\n        dispatch(climatizationErrorActionCreator(error));\r\n        if (onError) {\r\n            onError();\r\n        }\r\n    }\r\n}\r\n\r\nexport const climatizationOn = (onSuccess, onError) => async (dispatch) => {\r\n    try {\r\n        const asyncData = await new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n        dispatch(climatizationOnActionCreator());\r\n        dispatch(climatizationToggleCompleteActionCreator());\r\n        if (onSuccess) {\r\n            onSuccess();\r\n        }\r\n    } catch (error) {\r\n        dispatch(climatizationToggleCompleteActionCreator());\r\n        dispatch(climatizationErrorActionCreator(error));\r\n        if (onError) {\r\n            onError();\r\n        }\r\n    }\r\n}\r\n\r\nexport const toggleCarClimatization = (onSuccess, onError) => async (dispatch, getStore) => {\r\n    const store = getStore();\r\n    const {isTurnedOn, error} = climatizationSelector(store);\r\n    dispatch(climatizationToggleStartActionCreator())\r\n    if (error) {\r\n        dispatch(unsetClimatizationErrorActionCreator());\r\n    }\r\n    if (isTurnedOn) {\r\n        dispatch(climatizationOff(onSuccess, onError));\r\n    }\r\n    else {\r\n        dispatch(climatizationOn(onSuccess, onError));\r\n    }\r\n}","import {engineSelector} from \"../selectors\";\r\n\r\nexport const ENGINE_ON = 'ENGINE_ON';\r\nexport const ENGINE_OFF = 'ENGINE_OFF';\r\nexport const ENGINE_TOGGLE_START = 'ENGINE_TOGGLE_START';\r\nexport const ENGINE_TOGGLE_COMPLETE = 'ENGINE_TOGGLE_COMPLETE';\r\nexport const ENGINE_ERROR = 'ENGINE_ERROR';\r\nexport const UNSET_ENGINE_ERROR ='UNSET_ENGINE_ERROR';\r\n\r\nexport const engineOnActionCreator = () => ({\r\n    type: ENGINE_ON,\r\n});\r\n\r\nexport const engineOffActionCreator = () => ({\r\n    type: ENGINE_OFF,\r\n});\r\n\r\nexport const engineToggleCompleteActionCreator = () => ({\r\n    type: ENGINE_TOGGLE_COMPLETE,\r\n});\r\n\r\nexport const engineToggleStartActionCreator = () => ({\r\n    type: ENGINE_TOGGLE_START,\r\n})\r\n\r\nexport const engineErrorActionCreator = (error) => ({\r\n    type: ENGINE_ERROR,\r\n    payload: error,\r\n})\r\n\r\nexport const unsetEngineErrorActionCreator = () => ({\r\n    type: UNSET_ENGINE_ERROR,\r\n})\r\n\r\n\r\nexport const engineOff = (onSuccess, onError) => async (dispatch) => {\r\n    try {\r\n        const asyncData = await new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n        dispatch(engineOffActionCreator());\r\n        dispatch(engineToggleCompleteActionCreator());\r\n        if (onSuccess) {\r\n            onSuccess();\r\n        }\r\n    } catch (error) {\r\n        dispatch(engineToggleCompleteActionCreator());\r\n        dispatch(engineErrorActionCreator(error));\r\n        if (onError) {\r\n            onError();\r\n        }\r\n    }\r\n}\r\n\r\nexport const engineOn = (onSuccess, onError) => async (dispatch) => {\r\n    try {\r\n        const asyncData = await new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n        dispatch(engineOnActionCreator());\r\n        dispatch(engineToggleCompleteActionCreator());\r\n        if (onSuccess) {\r\n            onSuccess();\r\n        }\r\n    } catch (error) {\r\n        dispatch(engineToggleCompleteActionCreator());\r\n        dispatch(engineErrorActionCreator(error));\r\n        if (onError) {\r\n            onError();\r\n        }\r\n    }\r\n}\r\n\r\nexport const toggleCarEngine = (onSuccess, onError) => async (dispatch, getStore) => {\r\n    const store = getStore();\r\n    const {error, isTurnedOn} = engineSelector(store);\r\n    dispatch(engineToggleStartActionCreator())\r\n    if (error) {\r\n        dispatch(unsetEngineErrorActionCreator());\r\n    }\r\n    if (isTurnedOn) {\r\n        dispatch(engineOff(onSuccess, onError));\r\n    }\r\n    else {\r\n        dispatch(engineOn(onSuccess, onError));\r\n    }\r\n}","import {honkSelector} from \"../selectors\";\r\nexport const HONK_TOGGLE_START = 'HONK_TOGGLE_START';\r\nexport const HONK_TOGGLE_COMPLETE = 'HONK_TOGGLE_COMPLETE';\r\nexport const HONK_ERROR = 'HONK_ERROR';\r\nexport const UNSET_HONK_ERROR ='UNSET_HONK_ERROR';\r\n\r\nexport const honkToggleCompleteActionCreator = () => ({\r\n    type: HONK_TOGGLE_COMPLETE,\r\n});\r\n\r\nexport const honkToggleStartActionCreator = () => ({\r\n    type: HONK_TOGGLE_START,\r\n})\r\n\r\nexport const honkErrorActionCreator = (error) => ({\r\n    type: HONK_ERROR,\r\n    payload: error,\r\n})\r\n\r\nexport const unsetHonkErrorActionCreator = () => ({\r\n    type: UNSET_HONK_ERROR,\r\n})\r\n\r\nexport const honk = (onSuccess, onError) => async (dispatch, getStore) => {\r\n    const store = getStore();\r\n    const {error} = honkSelector(store);\r\n    dispatch(honkToggleStartActionCreator())\r\n    if (error) {\r\n        dispatch(unsetHonkErrorActionCreator());\r\n    }\r\n    try {\r\n        const asyncData = await new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n        dispatch(honkToggleCompleteActionCreator());\r\n        if (onSuccess) {\r\n            onSuccess();\r\n        }\r\n    } catch (error) {\r\n        dispatch(honkToggleCompleteActionCreator());\r\n        dispatch(honkErrorActionCreator(error));\r\n        if (onError) {\r\n            onError();\r\n        }\r\n    }\r\n}","import {flashSelector} from \"../selectors\";\r\nexport const FLASH_TOGGLE_START = 'FLASH_TOGGLE_START';\r\nexport const FLASH_TOGGLE_COMPLETE = 'FLASH_TOGGLE_COMPLETE';\r\nexport const FLASH_ERROR = 'FLASH_ERROR';\r\nexport const UNSET_FLASH_ERROR ='UNSET_FLASH_ERROR';\r\n\r\nexport const flashToggleCompleteActionCreator = () => ({\r\n    type: FLASH_TOGGLE_COMPLETE,\r\n});\r\n\r\nexport const flashToggleStartActionCreator = () => ({\r\n    type: FLASH_TOGGLE_START,\r\n})\r\n\r\nexport const flashErrorActionCreator = (error) => ({\r\n    type: FLASH_ERROR,\r\n    payload: error,\r\n})\r\n\r\nexport const unsetFlashErrorActionCreator = () => ({\r\n    type: UNSET_FLASH_ERROR,\r\n})\r\n\r\nexport const flash = (onSuccess, onError) => async (dispatch, getStore) => {\r\n    const store = getStore();\r\n    const {error} = flashSelector(store);\r\n    dispatch(flashToggleStartActionCreator())\r\n    if (error) {\r\n        dispatch(unsetFlashErrorActionCreator());\r\n    }\r\n    try {\r\n        const asyncData = await new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n        dispatch(flashToggleCompleteActionCreator());\r\n        if (onSuccess) {\r\n            onSuccess();\r\n        }\r\n    } catch (error) {\r\n        dispatch(flashToggleCompleteActionCreator());\r\n        dispatch(flashErrorActionCreator(error));\r\n        if (onError) {\r\n            onError();\r\n        }\r\n    }\r\n}","import {honkAndFlashSelector} from \"../selectors\";\r\nexport const HONK_AND_FLASH_TOGGLE_START = 'HONK_AND_FLASH_TOGGLE_START';\r\nexport const HONK_AND_FLASH_TOGGLE_COMPLETE = 'HONK_AND_FLASH_TOGGLE_COMPLETE';\r\nexport const HONK_AND_FLASH_ERROR = 'HONK_AND_FLASH_ERROR';\r\nexport const UNSET_HONK_AND_FLASH_ERROR ='UNSET_HONK_AND_FLASH_ERROR';\r\n\r\nexport const honkAndFlashToggleCompleteActionCreator = () => ({\r\n    type: HONK_AND_FLASH_TOGGLE_COMPLETE,\r\n});\r\n\r\nexport const honkAndFlashToggleStartActionCreator = () => ({\r\n    type: HONK_AND_FLASH_TOGGLE_START,\r\n})\r\n\r\nexport const honkAndFlashErrorActionCreator = (error) => ({\r\n    type: HONK_AND_FLASH_ERROR,\r\n    payload: error,\r\n})\r\n\r\nexport const unsetHonkErrorActionCreator = () => ({\r\n    type: UNSET_HONK_AND_FLASH_ERROR,\r\n})\r\n\r\nexport const honkAndFlash = (onSuccess, onError) => async (dispatch, getStore) => {\r\n    const store = getStore();\r\n    const {error} = honkAndFlashSelector(store);\r\n    dispatch(honkAndFlashToggleStartActionCreator())\r\n    if (error) {\r\n        dispatch(unsetHonkErrorActionCreator());\r\n    }\r\n    try {\r\n        const asyncData = await new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n        dispatch(honkAndFlashToggleCompleteActionCreator());\r\n        if (onSuccess) {\r\n            onSuccess();\r\n        }\r\n    } catch (error) {\r\n        dispatch(honkAndFlashToggleCompleteActionCreator());\r\n        dispatch(honkAndFlashErrorActionCreator(error));\r\n        if (onError) {\r\n            onError();\r\n        }\r\n    }\r\n}","export const SET_LANGUAGE_CODE = 'SET_LANGUAGE_CODE';\r\n\r\nexport const setLanuageActionCreator = (code) => ({\r\n    type: SET_LANGUAGE_CODE,\r\n    payload: code,\r\n});","export const maintenanceCommand = [\r\n]\r\n\r\nexport const startCommand = [\r\n    'start',\r\n    'старт',\r\n];\r\n\r\nexport const stopCommand = [\r\n    'stop',\r\n    'стоп',\r\n];\r\n\r\nexport const startRecognitionCommand = [\r\n    'hola',\r\n    'хола'\r\n];\r\n\r\nexport const stopRecognitionCommand = [\r\n    'chow',\r\n    'сiao',\r\n    'чао'\r\n];\r\n\r\nexport const openCommand = [\r\n    'open',\r\n    'открой'\r\n];\r\n\r\nexport const closeCommand = [\r\n    'close',\r\n    'закрой'\r\n];","export const raisedHand = 'raised_hand';\r\nexport const rightHandSwipeLeftPosition = 'swipe_right_hand_left_position';\r\nexport const swipeCenterPosition = 'swipe_center_position';\r\nexport const swipeRightPosition = 'swipe_right_position';\r\nexport const swipeLeftPosition = 'swipe_left_position';\r\nexport const gestureMoveDefineTimeout = 1500;","export const red = 'red';\r\nexport const disabledGrey = 'grey';\r\nexport const green = '#1aaa1a';\r\n","import {CHANGE_CAR_COLOR, ROTATE_LEFT, ROTATE_RIGHT, ROTATION_STOP} from \"../actions\";\r\nimport {ROTATION_SPEED} from \"../../constants\";\r\n\r\nconst initialState = {\r\n    rotation: 0,\r\n    color: {\r\n        b: 0.13285456597805023,\r\n        g: 0.0010034418664872646,\r\n        r: 0,\r\n    },\r\n};\r\n\r\nconst selectorsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ROTATE_RIGHT:\r\n            return {\r\n                ...state,\r\n                rotation: ROTATION_SPEED,\r\n            }\r\n        case ROTATE_LEFT:\r\n            return {\r\n                ...state,\r\n                rotation: -ROTATION_SPEED,\r\n            }\r\n        case ROTATION_STOP:\r\n            return {\r\n                ...state,\r\n                rotation: 0\r\n            }\r\n        case CHANGE_CAR_COLOR:\r\n            return {\r\n                ...state,\r\n                color: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default selectorsReducer;","export const ROTATION_SPEED = 2;","import {LOCK_CAR, UNLOCK_CAR, LOCK_CAR_START, LOCK_CAR_COMPLETE, LOCK_CAR_ERROR, UNSET_LOCK_CAR_ERROR} from \"../actions\";\r\n\r\nconst initialState = {\r\n    isLocked: true,\r\n    inProcess: false,\r\n    error: null,\r\n};\r\n\r\nexport const carLockReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOCK_CAR_START:\r\n            return {\r\n                ...state,\r\n                inProcess: true,\r\n            }\r\n        case LOCK_CAR_COMPLETE:\r\n            return {\r\n                ...state,\r\n                inProcess: false,\r\n\r\n            }\r\n        case LOCK_CAR_ERROR:\r\n            return  {\r\n                ...state,\r\n                error: action.payload,\r\n            }\r\n        case LOCK_CAR:\r\n            return {\r\n                ...state,\r\n                isLocked: true,\r\n            }\r\n        case UNLOCK_CAR:\r\n            return {\r\n                ...state,\r\n                isLocked: false,\r\n            }\r\n        case UNSET_LOCK_CAR_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {CLIMATIZATION_ON, CLIMATIZATION_OFF, CLIMATIZATION_TOGGLE_START, CLIMATIZATION_TOGGLE_COMPLETE, CLIMATIZATION_ERROR, UNSET_CLIMATIZATION_ERROR} from \"../actions\";\r\n\r\nconst initialState = {\r\n    inProcess: false,\r\n    error: null,\r\n    isTurnedOn: false,\r\n};\r\n\r\nexport const carClimatizationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CLIMATIZATION_TOGGLE_START:\r\n            return {\r\n                ...state,\r\n                inProcess: true,\r\n            }\r\n        case CLIMATIZATION_TOGGLE_COMPLETE:\r\n            return {\r\n                ...state,\r\n                inProcess: false,\r\n            }\r\n        case CLIMATIZATION_ERROR:\r\n            return  {\r\n                ...state,\r\n                error: action.payload,\r\n            }\r\n        case CLIMATIZATION_ON:\r\n            return {\r\n                ...state,\r\n                isTurnedOn: true,\r\n            }\r\n        case CLIMATIZATION_OFF:\r\n            return {\r\n                ...state,\r\n                isTurnedOn: false,\r\n            }\r\n        case UNSET_CLIMATIZATION_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {ENGINE_ON, ENGINE_OFF, ENGINE_TOGGLE_START, ENGINE_TOGGLE_COMPLETE, ENGINE_ERROR, UNSET_ENGINE_ERROR} from \"../actions\";\r\n\r\nconst initialState = {\r\n    inProcess: false,\r\n    error: null,\r\n    isTurnedOn: false,\r\n};\r\n\r\nexport const carEngineReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ENGINE_TOGGLE_START:\r\n            return {\r\n                ...state,\r\n                inProcess: true,\r\n            }\r\n        case ENGINE_TOGGLE_COMPLETE:\r\n            return {\r\n                ...state,\r\n                inProcess: false,\r\n            }\r\n        case ENGINE_ERROR:\r\n            return  {\r\n                ...state,\r\n                error: action.payload,\r\n            }\r\n        case ENGINE_ON:\r\n            return {\r\n                ...state,\r\n                isTurnedOn: true,\r\n            }\r\n        case ENGINE_OFF:\r\n            return {\r\n                ...state,\r\n                isTurnedOn: false,\r\n            }\r\n        case UNSET_ENGINE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {HONK_TOGGLE_START, HONK_TOGGLE_COMPLETE, HONK_ERROR, UNSET_HONK_ERROR} from \"../actions\";\r\n\r\nconst initialState = {\r\n    inProcess: false,\r\n    error: null,\r\n};\r\n\r\nexport const carHonkReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HONK_TOGGLE_START:\r\n            return {\r\n                ...state,\r\n                inProcess: true,\r\n            }\r\n        case HONK_TOGGLE_COMPLETE:\r\n            return {\r\n                ...state,\r\n                inProcess: false,\r\n            }\r\n        case HONK_ERROR:\r\n            return  {\r\n                ...state,\r\n                error: action.payload,\r\n            }\r\n        case UNSET_HONK_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {FLASH_TOGGLE_START, FLASH_TOGGLE_COMPLETE, FLASH_ERROR, UNSET_FLASH_ERROR} from \"../actions\";\r\n\r\nconst initialState = {\r\n    inProcess: false,\r\n    error: null,\r\n};\r\n\r\nexport const carFlashReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FLASH_TOGGLE_START:\r\n            return {\r\n                ...state,\r\n                inProcess: true,\r\n            }\r\n        case FLASH_TOGGLE_COMPLETE:\r\n            return {\r\n                ...state,\r\n                inProcess: false,\r\n            }\r\n        case FLASH_ERROR:\r\n            return  {\r\n                ...state,\r\n                error: action.payload,\r\n            }\r\n        case UNSET_FLASH_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {HONK_AND_FLASH_TOGGLE_START, HONK_AND_FLASH_TOGGLE_COMPLETE, HONK_AND_FLASH_ERROR, UNSET_HONK_AND_FLASH_ERROR} from \"../actions\";\r\n\r\nconst initialState = {\r\n    inProcess: false,\r\n    error: null,\r\n};\r\n\r\nexport const carHonkAndFlashReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HONK_AND_FLASH_TOGGLE_START:\r\n            return {\r\n                ...state,\r\n                inProcess: true,\r\n            }\r\n        case HONK_AND_FLASH_TOGGLE_COMPLETE:\r\n            return {\r\n                ...state,\r\n                inProcess: false,\r\n            }\r\n        case HONK_AND_FLASH_ERROR:\r\n            return  {\r\n                ...state,\r\n                error: action.payload,\r\n            }\r\n        case UNSET_HONK_AND_FLASH_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport {carLockReducer} from \"./car-lock-reducer\";\r\nimport {carClimatizationReducer} from \"./car-climatization-reducer\";\r\nimport {carEngineReducer} from \"./car-engine-reducer\";\r\nimport {carHonkReducer} from \"./car-honk-reducer\";\r\nimport {carFlashReducer} from \"./car-flash-reducer\";\r\nimport {carHonkAndFlashReducer} from \"./car-honk-and-flash-reducer\";\r\n\r\nexport const carReducer = combineReducers({\r\n    lock: carLockReducer,\r\n    climatization: carClimatizationReducer,\r\n    engine: carEngineReducer,\r\n    honk: carHonkReducer,\r\n    flash: carFlashReducer,\r\n    honkAndFlash: carHonkAndFlashReducer,\r\n});\r\n\r\n","export const SAVE_CONFIGURATOR_ACTIONS_STATE = 'SAVE_CONFIGURATOR_ACTIONS_STATE';\r\n\r\nexport const saveConfiguratorActionsState = (newState) => (\r\n    {\r\n        type: SAVE_CONFIGURATOR_ACTIONS_STATE,\r\n        payload: newState,\r\n    }\r\n)","import {SAVE_CONFIGURATOR_ACTIONS_STATE} from \"../actions/configurator-actions\";\r\n\r\nconst initialState = {\r\n   actionsState: {\r\n   }\r\n};\r\n\r\nconst configuratorReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SAVE_CONFIGURATOR_ACTIONS_STATE:\r\n         return {\r\n            ...state,\r\n            actionsState: {...action.payload},\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport default configuratorReducer;","import {SET_LANGUAGE_CODE} from \"../actions\";\r\n\r\nconst initialState = {\r\n    code: 'EN'\r\n};\r\n\r\nexport const languageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LANGUAGE_CODE:\r\n            return {\r\n                ...state,\r\n                code: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport sceneReducer from \"./scene-reducer\";\r\nimport {carReducer} from \"./car-reducer\";\r\nimport configuratorReducer from \"./configurator-reducer\";\r\nimport {languageReducer} from \"./language-reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    scene: sceneReducer,\r\n    car: carReducer,\r\n    configurator: configuratorReducer,\r\n    language: languageReducer,\r\n});","import { createStore, applyMiddleware  } from \"redux\";\r\nimport {rootReducer} from \"./reducers\";\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));","import { Html, useProgress } from '@react-three/drei'\r\n\r\nexport const Loader = () => {\r\n    const { progress } = useProgress()\r\n    return <Html center>{progress} % loaded</Html>\r\n}","export const createCSSColorFromProportion = ({r, g, b}) => {\r\n    const multiplier = 255 / Math.max(...[r, g, b]);\r\n    return `rgb(${r * multiplier}, ${g * multiplier}, ${b * multiplier})`;\r\n}","export class AnimationActionCreator {\r\n    constructor(action) {\r\n        this.repetitions = 0;\r\n        this.action = action.bind(this);\r\n    }\r\n    play() {\r\n        this.action();\r\n        this.repetitions += 1;\r\n    }\r\n\r\n}","export const defineAnimationActionOrder = (name) => {\r\n    const isWheel = name.includes('Wheel');\r\n    const isWindow = name.includes('Window');\r\n    const isTrunk = name.includes('Trunk');\r\n    const isDoor = !isWheel && !isTrunk && !isWindow;\r\n\r\n    let order = 0;\r\n    if(isWindow) {\r\n        order += 0;\r\n    } else if(isDoor) {\r\n        order += 5\r\n    } else if (isTrunk) {\r\n        order += 10;\r\n    } else if (isWheel) {\r\n        order += 15;\r\n    }\r\n\r\n    const isLeft = name.includes('Left');\r\n    const isFront = name.includes('Front');\r\n    if (!isLeft) {\r\n        order += 1;\r\n    }\r\n    if (!isFront) {\r\n        order += 2;\r\n    }\r\n    return order;\r\n}","import {get} from 'lodash';\r\n\r\nconst dictionary = {\r\n    configurator: {\r\n        FrontLeftWindow: {\r\n            EN: 'Open front left window',\r\n            RU: 'Открыть переднее левое окно',\r\n        },\r\n        FrontRightWindow: {\r\n            EN: 'Open front right window',\r\n            RU: 'Открыть переднее правое окно',\r\n        },\r\n        BackLeftWindow: {\r\n            EN: 'Open back left window',\r\n            RU: 'Открыть заднее левое окно',\r\n        },\r\n        BackRightWindow: {\r\n            EN: 'Open back right window',\r\n            RU: 'Открыть заднее правое окно',\r\n        },\r\n\r\n        FrontLeftDoor: {\r\n            EN: 'Open front left door',\r\n            RU: 'Открыть переднюю левую дверь',\r\n        },\r\n        FrontRightDoor: {\r\n            EN: 'Open front right door',\r\n            RU: 'Открыть переднюю правую дверь',\r\n        },\r\n        BackLeftDoor: {\r\n            EN: 'Open back left door',\r\n            RU: 'Открыть заднюю левую дверь',\r\n        },\r\n        BackRightDoor: {\r\n            EN: 'Open back right door',\r\n            RU: 'Открыть заднюю правую дверь',\r\n        },\r\n\r\n        FrontLeftWheelTire: {\r\n            EN: 'Deflate front left wheel',\r\n            RU: 'Сдуть переднее левое колесо',\r\n        },\r\n        FrontRightWheelTire: {\r\n            EN: 'Deflate front right wheel',\r\n            RU: 'Сдуть переднее правое колесо',\r\n        },\r\n        BackLeftWheelTire: {\r\n            EN: 'Deflate back left wheel',\r\n            RU: 'Сдуть заднее левое колесо',\r\n        },\r\n        BackRightWheelTire: {\r\n            EN: 'Deflate back right wheel',\r\n            RU: 'Сдуть заднее правое колесо',\r\n        },\r\n\r\n        Trunk: {\r\n            EN: 'Open the trunk',\r\n            RU: 'Открыть багажник',\r\n        },\r\n\r\n        SaveButton: {\r\n            EN: 'Save',\r\n            RU: 'Сохранить',\r\n        },\r\n\r\n        Title: {\r\n            EN: 'Car state configurator',\r\n            RU: 'Конфигуратор состояния машины'\r\n        }\r\n    },\r\n    alerts: {\r\n        car: {\r\n            CloseSuccess: {\r\n                EN: 'Car closed',\r\n                RU: 'Машина закрыта',\r\n            },\r\n            // ClosedFailure: {\r\n            //     EN: 'Car opened',\r\n            //     RU: 'При закрытии машины произошла ошибка',\r\n            // },\r\n            OpenSuccess: {\r\n                EN: 'Car opened',\r\n                RU: 'Машина открыта',\r\n            },\r\n            // OpenFailure: {\r\n            //     EN: 'Open front left window',\r\n            //     RU: 'При отркытии машины произошла ошибка',\r\n            // },\r\n\r\n            ClimatizationOnSuccess: {\r\n                EN: 'Climatization turned on',\r\n                RU: 'Климат контроль включен',\r\n            },\r\n            // ClimatizationOnFailure: {\r\n            //     EN: 'Open front left successfully',\r\n            //     RU: 'Открыть переднее левое окно',\r\n            // },\r\n\r\n            ClimatizationOffSuccess: {\r\n                EN: 'Climatization turned off',\r\n                RU: 'Климат контроль выключен',\r\n            },\r\n            // ClimatizationOffFailure: {\r\n            //     EN: 'Open front left window',\r\n            //     RU: 'Открыть переднее левое окно',\r\n            // },\r\n\r\n            StartSuccess: {\r\n                EN: 'Engine started',\r\n                RU: 'Двигатель запущен',\r\n            },\r\n            // StartFailure: {\r\n            //     EN: 'Open front left window',\r\n            //     RU: 'Открыть переднее левое окно',\r\n            // },\r\n            StopSuccess: {\r\n                EN: 'Engine stopped',\r\n                RU: 'Двигатель выключен',\r\n            },\r\n            // StopFailure: {\r\n            //     EN: 'Open front left window',\r\n            //     RU: 'Открыть переднее левое окно',\r\n            // },\r\n\r\n            HonkSuccess: {\r\n                EN: 'Signal played successfully\\n',\r\n                RU: 'Сигнал успешно воспроизведен',\r\n            },\r\n            // HonkFailure: {\r\n            //     EN: 'Open front left window',\r\n            //     RU: 'Открыть переднее левое окно',\r\n            // },\r\n\r\n            FlashSuccess: {\r\n                EN: 'Signal played successfully\\n',\r\n                RU: 'Сигнал успешно воспроизведен',\r\n            },\r\n            // LightFailure: {\r\n            //     EN: 'Open front left window',\r\n            //     RU: 'Открыть переднее левое окно',\r\n            // },\r\n            StandardFailure: {\r\n                EN: 'Error occurred',\r\n                RU: 'Произошла ошибка'\r\n            }\r\n        },\r\n    },\r\n    voice: {\r\n        reactions: {\r\n            start: {\r\n                EN: 'Engine started',\r\n                RU: 'Двигатель запущен',\r\n            },\r\n            stop: {\r\n                EN: 'Engine stopped',\r\n                RU: 'Двигатель выключен',\r\n            },\r\n            open: {\r\n                EN: 'Car opened',\r\n                RU: 'Машина открыта',\r\n            },\r\n            close: {\r\n                EN: 'Car closed',\r\n                RU: 'Машина закрыта',\r\n            },\r\n            hola: {\r\n                EN: 'how can I help you',\r\n                RU: 'Чем я могу вам помочь'\r\n            },\r\n            chao: {\r\n                EN: 'Chao',\r\n                RU: 'Чао'\r\n            },\r\n            noMatch: {\r\n                EN: 'I didn\\'t understand your command could you repeat it please',\r\n                RU: 'Я не понял вашу команду не могли бы вы повторить ее'\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\nexport const getDictionaryValue = (path, lang = 'EN') => {\r\n    return  get(dictionary, `${path}.${lang}`, null);\r\n}","import {getDictionaryValue} from \"./getDictionaryValue\";\r\n\r\nexport const defineAnimationActionLabel = (name, lang = 'EN') => {\r\n    let dictionaryRoute = `configurator.${name.replace('Toggle', '')}`;\r\n    if (dictionaryRoute.includes('Window')) {\r\n        dictionaryRoute = dictionaryRoute.replace('Door', '')\r\n    }\r\n\r\n    return getDictionaryValue(dictionaryRoute, lang);\r\n}","import React, {useEffect, useRef, useState} from 'react'\r\nimport {useAnimations, useGLTF} from '@react-three/drei'\r\nimport {useLoader} from \"@react-three/fiber\";\r\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from 'three';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AnimationActionCreator, defineAnimationActionOrder} from \"../../utils\";\r\nimport {saveConfiguratorActionsState} from \"../../redux/actions/configurator-actions\";\r\nimport {defineAnimationActionLabel} from \"../../utils/define-animation-action-label\";\r\nimport {useInterval} from \"react-use\";\r\nconst MODEL_URL = './auto35.gltf';\r\n\r\nexport default function Model({color, dispatch, actionsState, lang}) {\r\n    const  group = useRef();\r\n    const gltf = useLoader(GLTFLoader, MODEL_URL);\r\n    const {scene , materials, animations, nodes} = gltf;\r\n    const [[wheelMaterial, glassMaterial], setMaterials] = useState([undefined, undefined]);\r\n    const {clips, mixer} = useAnimations(animations, scene);\r\n    const [carActions, setCarActions] = useState();\r\n    const [wheelMaterialAnimationRedIncrease, setWheelMaterialAnimationRedIncrease] = useState(true);\r\n    const [glassMaterialAnimationRedIncrease, setGlassMaterialAnimationRedIncrease] = useState(true);\r\n\r\n    useEffect(() => {\r\n        console.log(materials)\r\n        if (color) {\r\n            materials['MetallicBlue'].color = color;\r\n        }\r\n    }, [color])\r\n\r\n    // скрыть Mesh'ы, необходимые для смены материала\r\n    useEffect(() => {\r\n        if (nodes) {\r\n            console.log(nodes, materials)\r\n            const nodeNamesToHide = ['Sphere'];\r\n            nodeNamesToHide.forEach(nodeNameToHide => {\r\n                const nodeToHide = nodes[nodeNameToHide];\r\n                if (nodeToHide) {\r\n                    nodeToHide.visible = false;\r\n                }\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    // создание анимаций\r\n    useEffect(() => {\r\n        const newCarActions = {};\r\n\r\n        const GlassMaterial = materials['glass'];\r\n        const RedGlassMaterial = GlassMaterial.clone();\r\n        const WheelMaterial = materials['Rubber_Rough'];\r\n        const RedWheelMaterial = WheelMaterial.clone();\r\n\r\n        setMaterials((materials) => {\r\n            const newMaterials = [...materials];\r\n            newMaterials[0] = RedWheelMaterial;\r\n            newMaterials[1] = RedGlassMaterial;\r\n            return newMaterials;\r\n        })\r\n\r\n        clips.forEach((clip, index) => {\r\n                const clipClone = clip.clone();\r\n                const object = scene.children.find(({name}) => name === clip.name.replace('Open', '').replace('Window', ''));\r\n                if (object) {\r\n                    console.log(object)\r\n                    const newAction = mixer.clipAction( clipClone, object);\r\n                    newAction.clampWhenFinished = true;\r\n                    newAction.setLoop(THREE.LoopPingPong);\r\n                    newAction.repetitions = 0;\r\n                    newCarActions[clip.name.replace('Open', 'Toggle')] = new AnimationActionCreator(function ()  {\r\n                        if (clip.name.includes('Window')) {\r\n                            console.log(clip.name)\r\n                            if (this.repetitions % 2 === 0\r\n                            && nodes[clip.name.replace('Open', '')]?.children[0]?.children[0]?.material) {\r\n                                console.log(1)\r\n                                nodes[clip.name.replace('Open', '')].children[0].children[0].material = RedGlassMaterial;\r\n                            } else if (nodes[clip.name.replace('Open', '')]?.children[0]?.children[0]?.material) {\r\n                                nodes[clip.name.replace('Open', '')].children[0].children[0].material = GlassMaterial;\r\n                            }\r\n                        }\r\n                        newAction.play();\r\n                        newAction.paused = false ;\r\n                        newAction.repetitions += 1 ;\r\n                    });\r\n                }\r\n        });\r\n\r\n\r\n        Object.keys(nodes).forEach(nodeName => {\r\n            if (nodeName.includes('WheelTire')) {\r\n                newCarActions[`Toggle${nodeName}`] = new AnimationActionCreator(function () {\r\n                    if (this.repetitions % 2 === 0) {\r\n                        nodes[nodeName].material = RedWheelMaterial\r\n                    } else {\r\n                        nodes[nodeName].material = WheelMaterial\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        setCarActions(newCarActions);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (carActions) {\r\n            const newConfiguratorActionsState = {};\r\n            Object.keys(carActions).forEach(actionName => {\r\n                newConfiguratorActionsState[actionName] = {\r\n                    label: defineAnimationActionLabel(actionName, lang),\r\n                    order: defineAnimationActionOrder(actionName),\r\n                    repetitions: 0\r\n                }\r\n            })\r\n            dispatch(saveConfiguratorActionsState(newConfiguratorActionsState))\r\n        }\r\n    }, [carActions, lang])\r\n\r\n    useEffect(() => {\r\n        Object.keys(actionsState).forEach(action => {\r\n            if (carActions[action].repetitions % 2 !== actionsState[action].repetitions % 2) {\r\n                carActions[action].play();\r\n            }\r\n        })\r\n    }, [actionsState, carActions])\r\n\r\n    useInterval(() => {\r\n        if (wheelMaterialAnimationRedIncrease) {\r\n            wheelMaterial.color.r += 0.025;\r\n            if (wheelMaterial.color.r >= 0.5) {\r\n                setWheelMaterialAnimationRedIncrease(false);\r\n            }\r\n        } else {\r\n            wheelMaterial.color.r -= 0.025;\r\n            if (wheelMaterial.color.r <= 0) {\r\n                setWheelMaterialAnimationRedIncrease(true);\r\n            }\r\n        }\r\n        if (glassMaterialAnimationRedIncrease) {\r\n            glassMaterial.color.r += 30 / 20;\r\n            if (glassMaterial.color.r >= 30) {\r\n                setGlassMaterialAnimationRedIncrease(false);\r\n            }\r\n        } else {\r\n            glassMaterial.color.r -= 30 / 20;\r\n            if (glassMaterial.color.r <= 1) {\r\n                setGlassMaterialAnimationRedIncrease(true);\r\n            }\r\n        }\r\n    }, wheelMaterial && glassMaterial ? 70 : 0)\r\n\r\n    return (\r\n        <primitive object={gltf.scene} scale={1} ref={group} />\r\n    );\r\n}\r\n\r\nuseGLTF.preload(MODEL_URL)","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {rotationSelector} from \"../../redux/selectors\";\r\nimport cn from 'classnames';\r\nimport {rotateLeft, rotateRight, rotationStop} from \"../../redux/actions\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faChevronLeft, faChevronRight, faPause} from \"@fortawesome/free-solid-svg-icons\";\r\nimport './styles.scss';\r\nimport {disabledGrey} from \"../../constants\";\r\n\r\n\r\nconst SceneControls = () => {\r\n    const rotation = useSelector(rotationSelector);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n       <>\r\n            <div className={cn('arrow-container', 'arrow-container_left')} onClick={() => {\r\n                dispatch(rotateLeft())\r\n            }}>\r\n                <FontAwesomeIcon color={disabledGrey} icon={faChevronLeft} size={'2x'}/>\r\n            </div>\r\n            <div className={cn('arrow-container', 'arrow-container_right')} onClick={() => {\r\n                dispatch(rotateRight())\r\n            }}>\r\n                <FontAwesomeIcon color={disabledGrey} icon={faChevronRight} size={'2x'}/>\r\n            </div>\r\n            {rotation !== 0 && <div onClick={() => {\r\n                dispatch(rotationStop());\r\n            }} className={cn('rotation-stop-container')}>\r\n                <FontAwesomeIcon color={disabledGrey} icon={faPause} size={'2x'}/>\r\n            </div>}\r\n       </>\r\n    );\r\n}\r\n\r\nexport default SceneControls;","import React, {Suspense} from \"react\";\r\nimport {Loader} from \"../loader/loader\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Environment, OrbitControls} from \"@react-three/drei\";\r\nimport Model from '../model/model';\r\nimport * as THREE from 'three';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    carColorSelector,\r\n    configuratorActionsSelector,\r\n    lanuageCodeSelector,\r\n    rotationSelector\r\n} from \"../../redux/selectors\";\r\nimport SceneControls from \"../scene-controls/scene-controls\";\r\nimport './styles.scss';\r\n\r\nconst Scene = () => {\r\n    const rotation = useSelector(rotationSelector);\r\n    const carColor = useSelector(carColorSelector);\r\n    const dispatch = useDispatch();\r\n    const actionsState = useSelector(configuratorActionsSelector);\r\n    const lang = useSelector(lanuageCodeSelector);\r\n\r\n    return (\r\n        <div className={'scene-container'}>\r\n            <Canvas id={'three-scene'}>\r\n                <Suspense fallback={<Loader />}>\r\n                    <Model color={carColor} dispatch={dispatch} actionsState={actionsState} lang={lang} />\r\n                    <OrbitControls\r\n                        target={new THREE.Vector3(0, 3, 0)}\r\n                        enablePan={false}\r\n                        autoRotate={!!rotation}\r\n                        autoRotateSpeed={rotation}\r\n                        maxDistance={12}\r\n                        minDistance={7}\r\n                        maxPolarAngle={-2 * Math.PI}\r\n                        minPolarAngle={Math.PI / 2}\r\n                        maxAzimuthAngle={0}\r\n                    />\r\n                    <Environment files={'./cube.hdr'} background={true} />\r\n                </Suspense>\r\n            </Canvas>\r\n            <SceneControls />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scene;","import React, {useEffect, useState} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMicrophoneAlt, faMicrophoneAltSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport cn from 'classnames';\r\nimport stringSimilarity from 'string-similarity';\r\nimport {\r\n    PREDICTION_ACCURACY,\r\n    startCommand,\r\n    stopCommand,\r\n   closeCommand, openCommand, stopRecognitionCommand, startRecognitionCommand\r\n} from \"../../constants\";\r\nimport {defineDayTimeAppeal} from \"../../utils/defineDayTime\";\r\nimport './styles.scss';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {lanuageCodeSelector, lockSelector} from \"../../redux/selectors\";\r\nimport {getDictionaryValue} from \"../../utils/getDictionaryValue\";\r\nimport {engineOff, engineOn, lockCar, unlockCar} from \"../../redux/actions\";\r\n\r\nexport const VoiceRecognition = () => {\r\n    const lang = useSelector(lanuageCodeSelector);\r\n    const [recognizer, setRecognizer] = useState(null);\r\n    const [micActive, setMicActive] = useState(false);\r\n    const synth = window.speechSynthesis;\r\n    const dispatch = useDispatch();\r\n    const lockState = useSelector(lockSelector);\r\n    const {isLocked, inProcess: disabled} = lockState;\r\n\r\n\r\n    const toggleRecognition = () => {\r\n        if (micActive && recognizer) {\r\n            recognizer.stop();\r\n            setMicActive(false);\r\n        } else if (recognizer) {\r\n            recognizer.start();\r\n            setMicActive(true);\r\n        }\r\n    }\r\n\r\n    const initializeRecognition = () => {\r\n        if (recognizer && micActive) {\r\n            recognizer.stop();\r\n            setMicActive(false);\r\n        }\r\n        try {\r\n            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n            // Создаем распознаватель\r\n            const recognizer = new SpeechRecognition();\r\n            // Ставим опцию, чтобы распознавание началось ещё до того, как пользователь закончит говорить\r\n            recognizer.interimResults = true;\r\n            // Какой язык будем распознавать?\r\n            recognizer.lang = lang === 'RU' ? 'ru-Ru' : 'en-US';\r\n            // Чтобы продолжалось распознавание\r\n            recognizer.continuous = true;\r\n\r\n            let timeout = null;\r\n\r\n            const recognizeCommand = (event) => {\r\n                    const currentResult = event.results[event.resultIndex];\r\n                    const result = currentResult.isFinal ? currentResult[0].transcript : null;\r\n                    if (result) {\r\n                        console.log(result)\r\n                        const matches = stringSimilarity.findBestMatch(result.toLowerCase(), [\r\n                            ...startCommand,\r\n                            ...stopCommand,\r\n                            ...closeCommand,\r\n                            ...openCommand,\r\n                            ...stopRecognitionCommand,\r\n                        ]);\r\n                        const {bestMatch} = matches;\r\n                        console.log(matches)\r\n                        if (bestMatch.rating > PREDICTION_ACCURACY) {\r\n                            const resultMatchText = bestMatch.target;\r\n\r\n                            if (startCommand.includes(resultMatchText)) {\r\n                                const onSuccess = () => {\r\n                                    const utterance = new SpeechSynthesisUtterance(getDictionaryValue(\r\n                                        'voice.reactions.start', lang));\r\n                                    synth.speak(utterance);\r\n                                }\r\n                                const onError = (error) => {\r\n                                    const utterance = new SpeechSynthesisUtterance(getDictionaryValue('alerts.car.StandardFailure', lang))\r\n                                    console.log(error)\r\n                                    synth.speak(utterance);\r\n                                }\r\n                                dispatch(engineOn(onSuccess, onError));\r\n                            } else if (stopCommand.includes(resultMatchText)) {\r\n                                const onSuccess = () => {\r\n                                    const utterance = new SpeechSynthesisUtterance(getDictionaryValue(\r\n                                        'voice.reactions.stop', lang));\r\n                                    synth.speak(utterance);\r\n                                }\r\n                                const onError = (error) => {\r\n                                    const utterance = new SpeechSynthesisUtterance(getDictionaryValue('alerts.car.StandardFailure', lang))\r\n                                    console.log(error)\r\n                                    synth.speak(utterance);\r\n                                }\r\n                                dispatch(engineOff(onSuccess, onError));\r\n                            } else if (closeCommand.includes(resultMatchText)) {\r\n                                const onSuccess = () => {\r\n                                    const utterance = new SpeechSynthesisUtterance(getDictionaryValue(\r\n                                        'voice.reactions.close', lang));\r\n                                    synth.speak(utterance);\r\n                                }\r\n                                const onError = (error) => {\r\n                                    const utterance = new SpeechSynthesisUtterance(getDictionaryValue('alerts.car.StandardFailure', lang))\r\n                                    console.log(error)\r\n                                    synth.speak(utterance);\r\n                                }\r\n                                dispatch(lockCar(onSuccess, onError));\r\n\r\n                            } else if (openCommand.includes(resultMatchText)) {\r\n                                const onSuccess = () => {\r\n                                    const utterance = new SpeechSynthesisUtterance(getDictionaryValue(\r\n                                        'voice.reactions.open', lang));\r\n                                    synth.speak(utterance);\r\n                                }\r\n                                const onError = (error) => {\r\n                                    const utterance = new SpeechSynthesisUtterance(getDictionaryValue('alerts.car.StandardFailure', lang))\r\n                                    console.log(error)\r\n                                    synth.speak(utterance);\r\n                                }\r\n                                dispatch(unlockCar(onSuccess, onError));\r\n\r\n                            } else if (stopRecognitionCommand.includes(resultMatchText)) {\r\n                                const utterance = new SpeechSynthesisUtterance(getDictionaryValue(\r\n                                    'voice.reactions.chao', lang));\r\n                                synth.speak(utterance);\r\n                            }\r\n                            recognizer.onresult = recognizeHola;\r\n                            if (timeout)\r\n                                clearTimeout(timeout);\r\n                        } else {\r\n                            const utterance = new SpeechSynthesisUtterance(getDictionaryValue(\r\n                                'voice.reactions.noMatch', lang));\r\n                            synth.speak(utterance);\r\n                            if (timeout) {\r\n                                clearTimeout(timeout);\r\n                                timeout = setTimeout(() => {\r\n                                    recognizer.onresult = recognizeHola;\r\n                                    const utterance = new SpeechSynthesisUtterance(getDictionaryValue(\r\n                                        'voice.reactions.noMatch', lang));\r\n                                    synth.speak(utterance);\r\n                                }, 5000);\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n\r\n            const recognizeHola = (event) => {\r\n                const currentResult = event.results[event.resultIndex];\r\n                const result = currentResult.isFinal ? currentResult[0].transcript : null;\r\n                if (result) {\r\n                    const matches = stringSimilarity.findBestMatch(result.toLowerCase(), [\r\n                        ...startRecognitionCommand,\r\n                    ]);\r\n                    const {bestMatch} = matches;\r\n                    if (bestMatch.rating > PREDICTION_ACCURACY) {\r\n                        // стартуем норм распознавание и говорим в ответ\r\n                        const utterance = new SpeechSynthesisUtterance(`${defineDayTimeAppeal(lang)} ${\r\n                            getDictionaryValue('voice.reactions.hola', lang)}`);\r\n                        synth.speak(utterance);\r\n                        recognizer.onresult = recognizeCommand;\r\n                    }\r\n                }\r\n            }\r\n\r\n            recognizer.onresult = recognizeHola;\r\n            setRecognizer(recognizer);\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n   useEffect(initializeRecognition, [lang]);\r\n\r\n    return window.webkitSpeechRecognition || window.SpeechRecognition ? <div onClick={toggleRecognition} className={cn('mic-container', micActive && 'mic-container_active')}>\r\n        <FontAwesomeIcon color={'grey'} icon={micActive ? faMicrophoneAlt : faMicrophoneAltSlash} />\r\n    </div> : <></>\r\n}","export const PREDICTION_ACCURACY = 0.7","export const defineDayTimeAppeal = (lang) => {\r\n    const Digital= new Date()\r\n    const hours = Digital.getHours()\r\n    if (hours >= 5 && hours <= 11)\r\n        return lang === 'RU' ? 'Доброе утро' : 'Good morning';\r\n    else if (hours >= 12 && hours <= 17)\r\n        return lang === 'RU' ? 'Добрый день' : 'Good day';\r\n    else if (hours >= 17 && hours <= 23)\r\n        return lang === 'RU' ? 'Добрый вечер' : 'Good evening';\r\n    else\r\n        return lang === 'RU' ? 'Доброй ночи' : 'Good night';\r\n}","import * as fp from \"fingerpose\";\r\nimport {raisedHand as raisedHandName} from \"../constants\";\r\n\r\nexport const raisedHandGesture = new fp.GestureDescription(raisedHandName);\r\n\r\n// Thumb\r\nraisedHandGesture.addCurl(fp.Finger.Thumb, fp.FingerCurl.NoCurl, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.VerticalUp, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.DiagonalUpRight, 0.8);\r\nraisedHandGesture.addDirection(fp.Finger.Thumb, fp.FingerDirection.DiagonalUpLeft, 0.8);\r\n\r\n// Index\r\nraisedHandGesture.addCurl(fp.Finger.Index, fp.FingerCurl.NoCurl, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Index, fp.FingerDirection.VerticalUp, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Index, fp.FingerDirection.DiagonalUpRight, 0.5);\r\nraisedHandGesture.addDirection(fp.Finger.Index, fp.FingerDirection.DiagonalUpLeft, 0.5);\r\n\r\n// Middle\r\nraisedHandGesture.addCurl(fp.Finger.Middle, fp.FingerCurl.NoCurl, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Middle, fp.FingerDirection.VerticalUp, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Middle, fp.FingerDirection.DiagonalUpRight, 0.5);\r\nraisedHandGesture.addDirection(fp.Finger.Middle, fp.FingerDirection.DiagonalUpLeft, 0.5);\r\n\r\n// Ring\r\nraisedHandGesture.addCurl(fp.Finger.Ring, fp.FingerCurl.NoCurl, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Ring, fp.FingerDirection.VerticalUp, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Ring, fp.FingerDirection.DiagonalUpRight, 0.5);\r\nraisedHandGesture.addDirection(fp.Finger.Ring, fp.FingerDirection.DiagonalUpLeft, 0.5);\r\n\r\n// Pinky\r\nraisedHandGesture.addCurl(fp.Finger.Pinky, fp.FingerCurl.NoCurl, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Pinky, fp.FingerDirection.VerticalUp, 1.0);\r\nraisedHandGesture.addDirection(fp.Finger.Pinky, fp.FingerDirection.DiagonalUpRight, 0.5);\r\nraisedHandGesture.addDirection(fp.Finger.Pinky, fp.FingerDirection.DiagonalUpLeft, 0.5);","import * as fp from \"fingerpose\";\r\nimport {swipeCenterPosition} from \"../constants\";\r\n\r\nexport const swipeCenterPositionGesture = new fp.GestureDescription(swipeCenterPosition);\r\n\r\n// Thumb\r\nswipeCenterPositionGesture.addCurl(fp.Finger.Thumb, fp.FingerCurl.FullCurl, 1.0);\r\n\r\n// Index\r\nswipeCenterPositionGesture.addCurl(fp.Finger.Index, fp.FingerCurl.NoCurl, 1.0);\r\nswipeCenterPositionGesture.addDirection(fp.Finger.Index, fp.FingerDirection.VerticalUp, 1);\r\n\r\n// Middle\r\nswipeCenterPositionGesture.addCurl(fp.Finger.Middle, fp.FingerCurl.NoCurl, 1.0);\r\nswipeCenterPositionGesture.addDirection(fp.Finger.Middle, fp.FingerDirection.VerticalUp, 1);\r\n\r\n// Ring\r\nswipeCenterPositionGesture.addCurl(fp.Finger.Ring, fp.FingerCurl.FullCurl, 1.0);\r\n\r\n// Pinky\r\nswipeCenterPositionGesture.addCurl(fp.Finger.Pinky, fp.FingerCurl.FullCurl, 1.0);\r\n\r\n// Set additional weight\r\nswipeCenterPositionGesture.setWeight(fp.Finger.Index, 2);\r\nswipeCenterPositionGesture.setWeight(fp.Finger.Middle, 2);","import * as fp from \"fingerpose\";\r\nimport {swipeRightPosition} from \"../constants\";\r\n\r\nexport const swipeRightPositionGesture = new fp.GestureDescription(swipeRightPosition);\r\n\r\n// Thumb\r\nswipeRightPositionGesture.addCurl(fp.Finger.Thumb, fp.FingerCurl.FullCurl, 1.0);\r\n\r\n// Index\r\nswipeRightPositionGesture.addCurl(fp.Finger.Index, fp.FingerCurl.NoCurl, 1.0);\r\nswipeRightPositionGesture.addDirection(fp.Finger.Index, fp.FingerDirection.DiagonalUpRight, 1);\r\n\r\n// Middle\r\nswipeRightPositionGesture.addCurl(fp.Finger.Middle, fp.FingerCurl.NoCurl, 1.0);\r\nswipeRightPositionGesture.addDirection(fp.Finger.Middle, fp.FingerDirection.DiagonalUpRight, 1);\r\n\r\n// Ring\r\nswipeRightPositionGesture.addCurl(fp.Finger.Ring, fp.FingerCurl.FullCurl, 1.0);\r\n\r\n// Pinky\r\nswipeRightPositionGesture.addCurl(fp.Finger.Pinky, fp.FingerCurl.FullCurl, 1.0);\r\n\r\n// Set additional weight\r\nswipeRightPositionGesture.setWeight(fp.Finger.Index, 2);\r\nswipeRightPositionGesture.setWeight(fp.Finger.Middle, 2);","import * as fp from \"fingerpose\";\r\nimport {swipeLeftPosition} from \"../constants\";\r\n\r\nexport const swipeLeftPositionGesture = new fp.GestureDescription(swipeLeftPosition);\r\n\r\n// Thumb\r\nswipeLeftPositionGesture.addCurl(fp.Finger.Thumb, fp.FingerCurl.FullCurl, 1.0);\r\n\r\n// Index\r\nswipeLeftPositionGesture.addCurl(fp.Finger.Index, fp.FingerCurl.NoCurl, 1.0);\r\nswipeLeftPositionGesture.addDirection(fp.Finger.Index, fp.FingerDirection.DiagonalUpLeft, 1);\r\n\r\n// Middle\r\nswipeLeftPositionGesture.addCurl(fp.Finger.Middle, fp.FingerCurl.NoCurl, 1.0);\r\nswipeLeftPositionGesture.addDirection(fp.Finger.Middle, fp.FingerDirection.DiagonalUpLeft, 1);\r\n\r\n// Ring\r\nswipeLeftPositionGesture.addCurl(fp.Finger.Ring, fp.FingerCurl.FullCurl, 1.0);\r\n\r\n// Pinky\r\nswipeLeftPositionGesture.addCurl(fp.Finger.Pinky, fp.FingerCurl.FullCurl, 1.0);\r\n\r\n// Set additional weight\r\nswipeLeftPositionGesture.setWeight(fp.Finger.Index, 2);\r\nswipeLeftPositionGesture.setWeight(fp.Finger.Middle, 2);","import {createPortal} from \"react-dom\";\r\nimport {useEffect, useState, useRef} from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\nimport * as fp from \"fingerpose\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faVideo, faVideoSlash} from '@fortawesome/free-solid-svg-icons'\r\nimport cn from \"classnames\";\r\nimport './styles.scss';\r\nimport {\r\n    gestureMoveDefineTimeout,\r\n    raisedHand,\r\n    swipeCenterPosition,\r\n    swipeLeftPosition,\r\n    swipeRightPosition\r\n} from \"../../constants\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {rotateLeft, rotateRight, rotationStop} from \"../../redux/actions\";\r\nimport {\r\n    raisedHandGesture,\r\n    swipeCenterPositionGesture, swipeLeftPositionGesture,\r\n    swipeRightPositionGesture\r\n} from \"../../gestureDescriptions\";\r\nimport {useInterval} from \"react-use\";\r\n// import {useWindowSize} from \"react-use\";\r\n\r\nexport const GestureRecognition = () => {\r\n    // const {width, height} = useWindowSize();\r\n    const dispatch = useDispatch();\r\n    const [videoActive, setVideoActive] = useState(false);\r\n    const [loadedPoses, setLoadedPoses] = useState(false);\r\n    const [lastGesture, setLastGesture] = useState(null);\r\n    // TODO добавить обработку зума жестами (?)\r\n    const webcamRef = useRef(null);\r\n\r\n    useEffect( () => {\r\n      const loadPoses = async () => {\r\n        const net = await handpose.load();\r\n        setLoadedPoses(net);\r\n      }\r\n      loadPoses();\r\n    }, []);\r\n\r\n\r\n    const detect = async (net) => {\r\n        // console.log(\"DETECT\")\r\n        // Check data is available\r\n        if (\r\n            typeof webcamRef.current !== \"undefined\" &&\r\n            webcamRef.current !== null &&\r\n            webcamRef.current.video.readyState === 4\r\n        ) {\r\n            // Get Video Properties\r\n            const video = webcamRef.current.video;\r\n            const videoWidth = video.videoWidth;\r\n            const videoHeight = video.videoHeight;\r\n\r\n            // Set video width\r\n            webcamRef.current.video.width = videoWidth;\r\n            webcamRef.current.video.height = videoHeight;\r\n\r\n            // Make Detections\r\n            const hand = await net.estimateHands(video);\r\n\r\n            if (hand.length > 0) {\r\n                const GE = new fp.GestureEstimator([raisedHandGesture, swipeCenterPositionGesture,\r\n                    swipeRightPositionGesture, swipeLeftPositionGesture]);\r\n                const gesture = await GE.estimate(hand[0].landmarks, 8);\r\n                if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n                    // console.log(gesture.gestures);\r\n\r\n                    const confidence = gesture.gestures.map(\r\n                        (prediction) => prediction.confidence\r\n                    );\r\n                    const maxConfidence = confidence.indexOf(\r\n                        Math.max.apply(null, confidence)\r\n                    );\r\n                    const gestureName = gesture.gestures[maxConfidence].name;\r\n                    const lastGestureName = lastGesture?.gestureName;\r\n\r\n                    console.log(gestureName);\r\n\r\n                    if (gestureName === raisedHand) {\r\n                        dispatch(rotationStop());\r\n                    } else {\r\n                        console.log('swipe')\r\n                        if (!lastGesture) {\r\n                            console.log('!lastGesture');\r\n                        } else if (lastGesture.gestureName === gestureName) {\r\n                            console.log('same')\r\n                        } else {\r\n                            console.log('not same')\r\n                            if (Date.now() - lastGesture.timestamp <= gestureMoveDefineTimeout) {\r\n                                console.log('inner not same');\r\n                                if ((lastGestureName === swipeLeftPosition && gestureName === swipeCenterPosition) ||\r\n                                    (lastGestureName === swipeCenterPosition && gestureName === swipeRightPosition) ||\r\n                                    (lastGestureName === swipeLeftPosition && gestureName === swipeRightPosition)) {\r\n                                    console.log('rotateRight')\r\n                                    dispatch(rotateRight())\r\n                                } else if ((lastGestureName === swipeRightPosition && gestureName === swipeCenterPosition) ||\r\n                                    (lastGestureName === swipeCenterPosition && gestureName === swipeLeftPosition) ||\r\n                                    (lastGestureName === swipeRightPosition && gestureName === swipeLeftPosition))\r\n                                {\r\n                                    console.log('rotateLeft')\r\n                                    dispatch(rotateLeft());\r\n                                }\r\n                            }\r\n                        }\r\n                        setLastGesture({\r\n                            gestureName,\r\n                            timestamp: Date.now(),\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleVideoActive = async () => {\r\n      if (loadedPoses) {\r\n        if (videoActive) {\r\n          setVideoActive(false);\r\n          // if (detectionInterval) {\r\n          //     clearInterval(detectionInterval);\r\n          // };\r\n        } else {\r\n          setVideoActive(true);\r\n          // const newDetectionInterval = setInterval(() => {\r\n          //     detect(loadedPoses);\r\n          // }, 10);\r\n          // setDetectionInterval(newDetectionInterval);\r\n        }\r\n      }\r\n    }\r\n\r\n    useInterval(() => detect(loadedPoses), videoActive ? 300 : null);\r\n\r\n    return  <>\r\n        {videoActive && createPortal(<div className={'gesture-recognition-container'}>\r\n            <Webcam\r\n                ref={webcamRef}\r\n                style={{\r\n                    position: \"absolute\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                    left: 0,\r\n                    top: 0,\r\n                    textAlign: \"center\",\r\n                    zindex: 9,\r\n                    width: 320,\r\n                    height: 240,\r\n                }}\r\n            />\r\n        </div>, document.querySelector('.App'))}\r\n        <div className={cn('video-button-container', videoActive && 'video-button-container',\r\n            !loadedPoses && 'video-button-container_disabled')} onClick={loadedPoses ? toggleVideoActive : undefined}>\r\n            <FontAwesomeIcon color={'grey'} icon={videoActive ? faVideo : faVideoSlash} />\r\n        </div>\r\n    </>\r\n}","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport cn from \"classnames\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faLock, faUnlock} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {lanuageCodeSelector, lockSelector} from \"../../redux/selectors\";\r\nimport {toggleCarLock} from \"../../redux/actions\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {getDictionaryValue} from \"../../utils/getDictionaryValue\";\r\n\r\nexport default function Lock() {\r\n    const dispatch = useDispatch();\r\n    const lockState = useSelector(lockSelector);\r\n    const lang = useSelector(lanuageCodeSelector);\r\n    const alert = useAlert();\r\n    const {isLocked, inProcess: disabled} = lockState;\r\n    const onClick = () => {\r\n        if (!disabled) {\r\n            const onSuccess = () => {\r\n                alert.success(getDictionaryValue(isLocked ?  'alerts.car.OpenSuccess'  :\r\n                    'alerts.car.CloseSuccess', lang));\r\n            }\r\n            const onError = (error) => {\r\n                alert.error(getDictionaryValue('alerts.car.StandardFailure', lang))\r\n\r\n                console.error(error);\r\n            }\r\n            dispatch(toggleCarLock(onSuccess, onError));\r\n        }\r\n    };\r\n    return (<div onClick={onClick} className={cn('lock-container')}>\r\n            <FontAwesomeIcon color={'grey'} icon={isLocked ? faLock : faUnlock} />\r\n    </div>);\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport \"./styles.scss\";\r\nimport cn from \"classnames\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeCarColor} from \"../../redux/actions\";\r\nimport {createCSSColorFromProportion} from \"../../utils/createCSSColorFromProportion\";\r\nimport {carColorSelector} from \"../../redux/selectors\";\r\nimport {SketchPicker} from \"react-color\";\r\n\r\nexport const ChangeColorButton = () => {\r\n    const dispatch = useDispatch();\r\n    const color = useSelector(carColorSelector)\r\n    console.log(color)\r\n    const onChangeComplete = (newColor) => {\r\n        console.log(newColor);\r\n        dispatch(changeCarColor({\r\n            r: newColor.rgb.r / 255,\r\n            g: newColor.rgb.g / 255,\r\n            b: newColor.rgb.b / 255,\r\n        }));\r\n    }\r\n    const [isOpened, setIsOpened] = useState(false);\r\n\r\n    return (<>\r\n        <div onClick={(event) => {\r\n            setIsOpened(isOpened => !isOpened);\r\n        }}\r\n                 className={cn('change-color-button')}\r\n                 style={{\r\n                     backgroundColor: createCSSColorFromProportion(color),\r\n                 }}>\r\n        </div>\r\n        {isOpened && <SketchPicker\r\n                className={'change-color__sketch-picker'}\r\n                color={{\r\n                    r: color.r * 255,\r\n                    g: color.g * 255,\r\n                    b: color.b * 255,\r\n                }}\r\n                onChangeComplete={onChangeComplete}\r\n                disableAlpha={true}\r\n        />}\r\n    </>);\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport cn from \"classnames\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faThermometerEmpty, faThermometerFull} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {climatizationSelector, lanuageCodeSelector} from \"../../redux/selectors\";\r\nimport {toggleCarClimatization} from \"../../redux/actions\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {disabledGrey, red} from \"../../constants\";\r\nimport {getDictionaryValue} from \"../../utils/getDictionaryValue\";\r\n\r\nexport default function Climatization() {\r\n    const dispatch = useDispatch();\r\n    const climatizationState = useSelector(climatizationSelector);\r\n    const lang = useSelector(lanuageCodeSelector);\r\n    const alert = useAlert();\r\n    const {isTurnedOn, inProcess: disabled} = climatizationState;\r\n    const onClick = () => {\r\n        if (!disabled) {\r\n            const onSuccess = () => {\r\n                alert.success(getDictionaryValue(isTurnedOn ? 'alerts.car.ClimatizationOffSuccess' :\r\n                    'alerts.car.ClimatizationOnSuccess', lang))\r\n            }\r\n            const onError = (error) => {\r\n                alert.error(getDictionaryValue('alerts.car.StandardFailure', lang))\r\n                console.error(error);\r\n            }\r\n            dispatch(toggleCarClimatization(onSuccess, onError));\r\n        }\r\n    };\r\n    return (<div onClick={onClick} className={cn('climatization-container')}>\r\n            <FontAwesomeIcon\r\n                color={isTurnedOn ? red : disabledGrey}\r\n                icon={isTurnedOn ? faThermometerFull : faThermometerEmpty}\r\n            />\r\n    </div>);\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport cn from \"classnames\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faKey} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {engineSelector, lanuageCodeSelector} from \"../../redux/selectors\";\r\nimport {toggleCarEngine} from \"../../redux/actions\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {green, disabledGrey} from \"../../constants\";\r\nimport {getDictionaryValue} from \"../../utils/getDictionaryValue\";\r\n\r\nexport default function Engine() {\r\n    const dispatch = useDispatch();\r\n    const engineState = useSelector(engineSelector);\r\n    const lang = useSelector(lanuageCodeSelector);\r\n    const alert = useAlert();\r\n    const {isTurnedOn, inProcess: disabled} = engineState;\r\n    const onClick = () => {\r\n        if (!disabled) {\r\n            const onSuccess = () => {\r\n                alert.success(getDictionaryValue(isTurnedOn ? 'alerts.car.StopSuccess' :\r\n                    'alerts.car.StartSuccess', lang))\r\n            }\r\n            const onError = (error) => {\r\n                alert.error(getDictionaryValue('alerts.car.StandardFailure', lang))\r\n                console.error(error);\r\n            }\r\n            dispatch(toggleCarEngine(onSuccess, onError));\r\n        }\r\n    };\r\n    return (<div onClick={onClick} className={cn('engine-container')}>\r\n        <FontAwesomeIcon color={isTurnedOn ? green : disabledGrey} icon={faKey} />\r\n    </div>);\r\n}\r\n\r\n","import React, {useMemo} from \"react\";\r\nimport \"./styles.scss\";\r\nimport cn from \"classnames\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBullhorn} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {honkSelector, lanuageCodeSelector} from \"../../redux/selectors\";\r\nimport {honk} from \"../../redux/actions\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {getDictionaryValue} from \"../../utils/getDictionaryValue\";\r\n\r\nexport default function Honk() {\r\n    const dispatch = useDispatch();\r\n    const honkState = useSelector(honkSelector);\r\n    const alert = useAlert();\r\n    const {inProcess: disabled} = honkState;\r\n    const audio = useMemo(() => {\r\n        return new Audio('./honk.mp3')\r\n    }, [])\r\n    const lang = useSelector(lanuageCodeSelector);\r\n    const onClick = () => {\r\n        if (!disabled) {\r\n            const onSuccess = () => {\r\n                alert.success(getDictionaryValue('alerts.car.HonkSuccess', lang));\r\n                audio.play();\r\n            }\r\n            const onError = (error) => {\r\n                alert.error(getDictionaryValue('alerts.car.StandardFailure', lang))\r\n                console.error(error);\r\n            }\r\n            dispatch(honk(onSuccess, onError));\r\n        }\r\n    };\r\n    return (<div onClick={onClick} className={cn('honk-container')}>\r\n            <FontAwesomeIcon color={'grey'} icon={faBullhorn} />\r\n    </div>);\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport cn from \"classnames\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faLightbulb} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {flashSelector, lanuageCodeSelector} from \"../../redux/selectors\";\r\nimport {toggleCarLock} from \"../../redux/actions\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {disabledGrey} from \"../../constants\";\r\nimport {getDictionaryValue} from \"../../utils/getDictionaryValue\";\r\n\r\nexport default function Flash() {\r\n    const dispatch = useDispatch();\r\n    const flashState = useSelector(flashSelector);\r\n    const alert = useAlert();\r\n    const {inProcess: disabled} = flashState;\r\n    const lang = useSelector(lanuageCodeSelector);\r\n    const onClick = () => {\r\n        if (!disabled) {\r\n            const onSuccess = () => {\r\n                alert.success(getDictionaryValue('alerts.car.FlashSuccess', lang));\r\n            }\r\n            const onError = (error) => {\r\n                alert.error(getDictionaryValue('alerts.car.StandardFailure', lang))\r\n                console.error(error);\r\n            }\r\n            dispatch(toggleCarLock(onSuccess, onError));\r\n        }\r\n    };\r\n    return (<div onClick={onClick} className={cn('flash-container')}>\r\n            <FontAwesomeIcon color={disabledGrey} icon={faLightbulb}  />\r\n    </div>);\r\n}\r\n\r\n","import React from \"react\";\r\nimport cn from \"classnames\";\r\nimport \"./styles.scss\";\r\nimport \"react-toggle/style.css\";\r\n\r\nconst Button = ({onClick, children, className}) => {\r\n    return <div className={cn(['button', className])} onClick={onClick}>\r\n        {children}\r\n    </div>;\r\n}\r\n\r\nexport default Button;\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport cn from \"classnames\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCogs, faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {configuratorActionsSelector, lanuageCodeSelector} from \"../../redux/selectors\";\r\nimport Toggle from 'react-toggle';\r\nimport {saveConfiguratorActionsState} from \"../../redux/actions/configurator-actions\";\r\nimport {disabledGrey, red} from \"../../constants\";\r\nimport \"./styles.scss\";\r\nimport \"react-toggle/style.css\";\r\nimport {getDictionaryValue} from \"../../utils/getDictionaryValue\";\r\nimport Button from \"../button/button\";\r\n\r\nexport default function Configurator() {\r\n    const dispatch = useDispatch();\r\n    const configuratorActionsReduxState = useSelector(configuratorActionsSelector);\r\n    const lang = useSelector(lanuageCodeSelector);\r\n    const [configuratorOpened, setConfiguratorOpened] = useState(false);\r\n    const [configuratorActionsState, setConfiguratorActionsState] = useState({});\r\n\r\n    useEffect(() => {\r\n        setConfiguratorActionsState({...configuratorActionsReduxState});\r\n    }, [configuratorOpened, configuratorActionsReduxState]);\r\n\r\n    const toggleConfiguratorOpened = () => {\r\n        setConfiguratorOpened(isOpened => !isOpened);\r\n    };\r\n\r\n    return (<>\r\n        <div onClick={toggleConfiguratorOpened} className={cn('configurator-button')}>\r\n            <FontAwesomeIcon color={disabledGrey} icon={faCogs} />\r\n        </div>\r\n        <div className={cn(['configurator-container',\r\n            configuratorOpened && 'configurator-container_opened'])}>\r\n            <div className={'configurator-container__header'}>\r\n                <div className={'configurator-container__title'}>\r\n                    {getDictionaryValue('configurator.Title', lang)}\r\n                </div>\r\n                <div className={'configurator-close-button'} onClick={() => setConfiguratorOpened(false)}>\r\n                    <FontAwesomeIcon icon={faTimes} color={red} size={'2x'} swapOpacity/>\r\n                </div>\r\n            </div>\r\n            <div className={'configurator-container__main'}>\r\n                {Object.keys(configuratorActionsState).sort((key1, key2) =>\r\n                    configuratorActionsState[key1].order - configuratorActionsState[key2].order).map(key =>\r\n                    <div key={key} className={'configurator-toggle-container'}>\r\n                        <div className={'configurator-toggle-label'}>{configuratorActionsState[key].label}</div>\r\n                        <div className={'configurator-toggle'}>\r\n                            <Toggle\r\n                                checked={configuratorActionsState[key].repetitions % 2 === 1}\r\n                                icons={false}\r\n                                onChange={() => {\r\n                                    setConfiguratorActionsState(configuratorState => ({\r\n                                            ...configuratorState,\r\n                                            [key]: {\r\n                                                ...configuratorState[key],\r\n                                                repetitions: configuratorState[key].repetitions + 1,\r\n                                            }\r\n                                        })\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Button onClick={() => {\r\n                dispatch(saveConfiguratorActionsState(configuratorActionsState))\r\n            }} className={'configurator-save-button'}>\r\n                {getDictionaryValue('configurator.SaveButton', lang)}\r\n            </Button>\r\n        </div>\r\n    </>);\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport cn from \"classnames\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {lanuageCodeSelector} from \"../../redux/selectors\";\r\nimport {setLanuageActionCreator} from \"../../redux/actions\";\r\n\r\nexport default function LanguageButton() {\r\n    const dispatch = useDispatch();\r\n    const lang = useSelector(lanuageCodeSelector);\r\n    const onClick = () => {\r\n        dispatch(setLanuageActionCreator(lang === 'RU' ? 'EN' : 'RU'));\r\n    };\r\n    return (<div onClick={onClick} className={cn('language-button')}>\r\n        {lang}\r\n    </div>);\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./styles.scss\";\r\nimport cn from \"classnames\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faInfo} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {lanuageCodeSelector, lockSelector} from \"../../redux/selectors\";\r\nimport {createPortal} from \"react-dom\";\r\n\r\nexport default function Info() {\r\n    const dispatch = useDispatch();\r\n    const lang = useSelector(lanuageCodeSelector);\r\n    const [isOpened, setIsOpened] = useState(true);\r\n    const onClick = () => {\r\n       setIsOpened(isOpened => !isOpened);\r\n    };\r\n    return (<>\r\n            <div onClick={onClick} className={cn('info-button')}>\r\n                <FontAwesomeIcon color={'grey'} icon={faInfo} />\r\n            </div>\r\n        {createPortal(<div className={cn(['info-container', isOpened && 'info-container_active'])}>\r\n            <div className={styles}>\r\n\r\n            </div>\r\n        </div>, document.body)}\r\n\r\n    </>);\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport \"./styles.scss\";\r\nimport {VoiceRecognition} from \"../voice-recognition/voice-recognition\";\r\nimport {GestureRecognition} from \"../gesture-recognition/gesture-recognition\";\r\nimport {useMediaDevices} from \"react-use\";\r\nimport Lock from \"../lock/lock\";\r\nimport {ChangeColorButton} from \"../change-color-button/change-color-button\";\r\nimport Climatization from \"../climatization/climatization\";\r\nimport Engine from \"../engine/engine\";\r\nimport Honk from \"../honk/honk\";\r\nimport Flash from \"../flash/flash\";\r\nimport Configurator from \"../configurator/configurator\";\r\nimport LanguageButton from \"../language-button/language-button\";\r\nimport Info from \"../info/info\";\r\n\r\nexport default function ButtonGroup() {\r\n    const devices = useMediaDevices();\r\n    const [{hasMic, hasVideo}, setDevicesAvailablity] = useState({\r\n        hasMic: false,\r\n        hasVideo: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(devices.devices)\r\n        let hasMic = false;\r\n        let hasVideo = false;\r\n        devices?.devices?.forEach(device => {\r\n            if (device.kind === 'audioinput') {\r\n                hasMic = true;\r\n            } else if (device.kind === 'videoinput') {\r\n                hasVideo = true;\r\n            } else {\r\n                console.log(device.kind)\r\n            }\r\n        })\r\n\r\n        setDevicesAvailablity({\r\n            hasMic,\r\n            hasVideo,\r\n        })\r\n\r\n    }, [devices])\r\n\r\n\r\n    return (\r\n        <div className=\"button-group\">\r\n            <Info />\r\n            <Configurator />\r\n            {hasMic && <VoiceRecognition />}\r\n            {hasVideo && <GestureRecognition />}\r\n            <Engine />\r\n            <Lock />\r\n            <Climatization />\r\n            <Honk />\r\n            <Flash />\r\n            <LanguageButton />\r\n            <ChangeColorButton />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport {Provider as ReduxProvider} from \"react-redux\";\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\r\nimport AlertTemplate from 'react-alert-template-basic'\r\nimport store from \"./redux/store\";\r\nimport Scene from './components/scene/scene'\r\nimport ButtonGroup from \"./components/button-group/button-group\";\r\n\r\n// optional configuration\r\nconst options = {\r\n    // you can also just use 'bottom center'\r\n    position: positions.BOTTOM_CENTER,\r\n    timeout: 3000,\r\n    offset: '10px',\r\n    // you can also just use 'scale'\r\n    transition: transitions.SCALE\r\n}\r\n\r\nexport default function App() {\r\n    return (\r\n        <ReduxProvider store={store}>\r\n            <AlertProvider template={AlertTemplate} {...options}>\r\n                <div className=\"App\">\r\n                    <Scene />\r\n                    <ButtonGroup />\r\n                </div>\r\n            </AlertProvider>\r\n        </ReduxProvider>\r\n    );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}